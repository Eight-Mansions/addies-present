#VAR(Table, TABLE)
#ADDTBL("sjis.tbl", Table)
#ACTIVETBL(Table)
#VAR(PTR, CUSTOMPOINTER)
#CREATEPTR(PTR, "LINEAR", -2147547136, 32)

#VAR(PTR1, CUSTOMPOINTER)
#CREATEPTR(PTR1, "LINEAR", -2147547136, 32)

#STRINGALIGN(2)

//P: 00003240
#JMP($00003240)
#WRITE(PTR, $0008817C)
//セレクトボタンでＴＩＰＳを表示
SELECT: View available TIPS
<$00>


//#WARN($0000325F, "@0000325F")
//P: 00003260
//#JMP($00003260)
#WRITE(PTR, $00088178)
//固定：５列目　スリップ：３列目
Break=Ring 5. Slip=Ring 3
<$00>


//#WARN($0000327F, "@0000327F")
//P: 00003280
//#JMP($00003280)
#WRITE(PTR, $00088174)
//この例題ではボーナスはＭ、ボムはＮ
"M"=Bonus. "N"=Bomb.
<$00>


//#WARN($000032A3, "@000032A3")
//P: 000032A4
//#JMP($000032A4)
#WRITE(PTR, $00088170)
//例．２列目を外し１列目で△ボタン
Remove Ring 2. Flip Ring 1. 
<$00>


//#WARN($000032C5, "@000032C5")
//P: 000032C8
//#JMP($000032C8)
#WRITE(PTR, $0008816C)
//例．１列目で△ボタン
Flip Ring 1.
<$00>


//#WARN($000032DD, "@000032DD")
//P: 000032E0
//#JMP($000032E0)
#WRITE(PTR, $00088168)
//例．１列目で□ボタン、スライド
Mirror Ring 1. Slide.
<$00>


//#WARN($000032FF, "@000032FF")
//P: 00003300
//#JMP($00003300)
#WRITE(PTR, $00088164)
//例．４列目で□ボタン
Mirror Ring 4.
<$00>


//#WARN($00003315, "@00003315")
//P: 00003318
//#JMP($00003318)
#WRITE(PTR, $00088160)
//例．２列目で△ボタン、スライド
Flip Ring 2. Slide.
<$00>


//#WARN($00003337, "@00003337")
//P: 00003338
//#JMP($00003338)
#WRITE(PTR, $0008815C)
//例．４列目でＲ１ボタン
Rotate Ring 4 +90°.
<$00>


//#WARN($0000334F, "@0000334F")
//P: 00003350
//#JMP($00003350)
#WRITE(PTR, $00088158)
//例．３列目でＲ１ボタン
Rotate Ring 3 +90°.
<$00>


//#WARN($00003367, "@00003367")
//P: 00003368
//#JMP($00003368)
#WRITE(PTR, $00088154)
//例．２列目を外し１列目でスライド
Remove Ring 2. Slide Ring 1.
<$00>


//#WARN($00003389, "@00003389")
//P: 0000338C
//#JMP($0000338C)
#WRITE(PTR, $00088150)
//例．１、２、１列目で順に○ボタン
Remove Ring 1. Exchange Ring 2.
<$00>


//#WARN($000033AD, "@000033AD")
//P: 000033B0
//#JMP($000033B0)
#WRITE(PTR, $0008814C)
//例．１列目で方向キー下　ＨＥ→ＩＦ
Slide Ring 1 DOWN. (HE→IF)
<$00>


//#WARN($000033D3, "@000033D3")
//P: 000033D4
//#JMP($000033D4)
#WRITE(PTR, $00088148)
//スタートボタンからＱＵＩＴで終了
START: RESTART OR QUIT
<$00>


//#WARN($000033F5, "@000033F5")
//P: 000033F8
//#JMP($000033F8)
#WBB(PTR1, $00031C60)
#WUB(PTR1, $00031C61)
#WLB(PTR1, $00031C68)
#WHB(PTR1, $00031C69)
//解答例：指示にあわせて解いて下さい\n（セレクトボタンで戻る）
Follow the demonstration.\n(SELECT: Back)
<$00>


//#WARN($00003434, "@00003434")
//P: 00003434
//#JMP($00003434)
#WBB(PTR1, $00031C6C)
#WUB(PTR1, $00031C6D)
#WLB(PTR1, $00031C70)
#WHB(PTR1, $00031C71)
//レコード以下で解いて下さい\n（セレクトボタンで解答例）
Beat the Club Record!\n(Select: Show solution)
<$00>


//#WARN($0000346A, "@0000346A")
//P: 0000346C
//#JMP($0000346C)
#WBB(PTR1, $00031CC8)
#WUB(PTR1, $00031CC9)
#WLB(PTR1, $00031CD0)
#WHB(PTR1, $00031CD1)
//ＲＥＤＯ：弊社の最短手を再現
REDO: Repeat your last move
<$00>


//#WARN($00003489, "@00003489")
//P: 0000348C
//#JMP($0000348C)
#WBB(PTR1, $00031CD4)
#WUB(PTR1, $00031CD5)
#WLB(PTR1, $00031CD8)
#WHB(PTR1, $00031CD9)
//ＲＥＤＯ：現在の最短手を再現
REDO: Repeat your last move
<$00>


//#WARN($000034A9, "@000034A9")
//P: 000034AC
//#JMP($000034AC)
#WBB(PTR1, $00031D50)
#WUB(PTR1, $00031D51)
#WLB(PTR1, $00031D58)
#WHB(PTR1, $00031D59)
//最短手の再現は初期状態からのみ可能
You can only redo\nyour last undone move.
<$00>


//#WARN($000034CF, "@000034CF")
//P: 000034D0
//#JMP($000034D0)
#WBB(PTR1, $00031D64)
#WUB(PTR1, $00031D65)
#WLB(PTR1, $00031D6C)
#WHB(PTR1, $00031D6D)
//ＵＮＤＯ…取消／ＲＥＤＯ…やり直し
Undo / Redo
<$00>


//#WARN($000034F3, "@000034F3")
//P: 000034F4
//#JMP($000034F4)
#WBB(PTR1, $000325E4)
#WUB(PTR1, $000325E5)
#WLB(PTR1, $000325EC)
#WHB(PTR1, $000325ED)
#WBB(PTR1, $00032D3C)
#WUB(PTR1, $00032D3D)
#WLB(PTR1, $00032D44)
#WHB(PTR1, $00032D45)
//失われたトータルスコアは戻りません
Total Scores won't restore.
<$00>


//#WARN($00003517, "@00003517")
//P: 00003518
//#JMP($00003518)
#WBB(PTR1, $00032E7C)
#WUB(PTR1, $00032E7D)
#WLB(PTR1, $00032E84)
#WHB(PTR1, $00032E85)
//これが弊社の最短手です\n次は一人で解いてみましょう
This is our Club Record.\nSee if you can beat it!
<$00>


//#WARN($0000354A, "@0000354A")
//P: 0000354C
//#JMP($0000354C)
#WBB(PTR1, $00032EA8)
#WUB(PTR1, $00032EA9)
#WLB(PTR1, $00032EB0)
#WHB(PTR1, $00032EB1)
//この練習問題は卒業です\n次の問題にチャレンジしましょう
Exercise complete!\nNow, take on the next!
<$00>


//#WARN($00003582, "@00003582")
//P: 00003584
//#JMP($00003584)
#WBB(PTR1, $00032EB8)
#WUB(PTR1, $00032EB9)
#WLB(PTR1, $00032EBC)
#WHB(PTR1, $00032EBD)
//レコードクリアまで練習しましょう\nもう一度チャレンジ！
Try again! Practice until\nyou beat the record!
<$00>


//#WARN($000035BA, "@000035BA")
//P: 000035BC
//#JMP($000035BC)
#WBB(PTR1, $00033134)
#WUB(PTR1, $00033135)
#WLB(PTR1, $0003313C)
#WHB(PTR1, $0003313D)
//moze////
moze////
<$00>


//#WARN($000035C5, "@000035C5")
//P: 000035C8
//#JMP($000035C8)
#WRITE(PTR, $000881CC)
//左９０°回転
Rotate -90°
<$00>


//#WARN($000035D5, "@000035D5")
//P: 000035D8
//#JMP($000035D8)
#WRITE(PTR, $000881C8)
//１８０°回転
Rotate 180°
<$00>


//#WARN($000035E5, "@000035E5")
//P: 000035E8
//#JMP($000035E8)
#WRITE(PTR, $000881C4)
//右９０°回転
Rotate +90°
<$00>


//#WARN($000035F5, "@000035F5")
//P: 000035F8
//#JMP($000035F8)
#WBB(PTR1, $000339C0)
#WUB(PTR1, $000339C1)
#WLB(PTR1, $000339C8)
#WHB(PTR1, $000339C9)
//%s%s手目は、左から%s列目で\n
%s%s. Look at Ring %s.\n
<$00>


//#WARN($00003614, "@00003614")
//P: 00003614
//#JMP($00003614)
#WBB(PTR1, $00033A60)
#WUB(PTR1, $00033A61)
#WLB(PTR1, $00033A6C)
#WHB(PTR1, $00033A6D)
//【%s】を押して【%s】
【%s】: 【%s】!
<$00>


//#WARN($00003629, "@00003629")
//P: 0000362C
//#JMP($0000362C)
#WBB(PTR1, $00033A70)
#WUB(PTR1, $00033A71)
#WLB(PTR1, $00033A74)
#WHB(PTR1, $00033A75)
//コマンド%s段目の【%s】
Command%SLVL【%S】
<$00>


//#WARN($00003643, "@00003643")
//P: 00003644
//#JMP($00003644)
#WBB(PTR1, $00033CC4)
#WUB(PTR1, $00033CC5)
#WLB(PTR1, $00033CCC)
#WHB(PTR1, $00033CCD)
//カーソルの位置が違います\nまずは例の通りに解いてみましょう
Follow the demonstration.
<$00>


//#WARN($0000367E, "@0000367E")
//P: 00003680
//#JMP($00003680)
#WBB(PTR1, $00033E00)
#WUB(PTR1, $00033E01)
#WLB(PTR1, $00033E08)
#WHB(PTR1, $00033E09)
//操作が違います\nまずは例の通りに解いてみましょう
Follow the demonstration.
<$00>


//#WARN($000036B0, "@000036B0")
//P: 000036B0
//#JMP($000036B0)
#WRITE(PTR, $00088220)
//正解に同じ文字がある場合は\n揃えて一緒に調整すべし
Lead Target Word letters\nto the central row.
<$00>


//#WARN($000036E2, "@000036E2")
//P: 000036E4
//#JMP($000036E4)
#WRITE(PTR, $0008821C)
//熟考したいときにはＬ２ボタンで\nアルファベット一覧表を表示
L2: Review alphabet
<$00>


//#WARN($0000371E, "@0000371E")
//P: 00003720
//#JMP($00003720)
#WRITE(PTR, $00088218)
//ノンビリ気分でやりたいときには\nＲ２ボタンでコマンド入力モードに
R2: Review command list
<$00>


//#WARN($00003760, "@00003760")
//P: 00003760
//#JMP($00003760)
#WRITE(PTR, $00088214)
//説明書に保存された好手は\nＲＥＤＯでリプレイできる
Solved puzzles are stored\nin the Users' Manual.
<$00>


//#WARN($00003792, "@00003792")
//P: 00003794
//#JMP($00003794)
#WRITE(PTR, $00088210)
//難しい問題に出会ったら\nＱＵＩＴしてすぐセーブ
If a puzzle looks hard,\nexit and save first!
<$00>


//#WARN($000037C2, "@000037C2")
//P: 000037C4
//#JMP($000037C4)
#WRITE(PTR, $0008820C)
//ボムやボーナスを探すには\nカーソル移動でアディを確認
If you pass a Bonus or\na Bomb, Addie will react.
<$00>


//#WARN($000037F8, "@000037F8")
//P: 000037F8
//#JMP($000037F8)
#WRITE(PTR, $00088208)
//早くボーナスを引いたときほど\nボムを踏まないように注意せよ
Don't trip Bonuses early.\nAlso, try to avoid Bombs!
<$00>


//#WARN($00003832, "@00003832")
//P: 00003834
//#JMP($00003834)
#WRITE(PTR, $00088204)
//ボムはその時のスコアの分だけ\nトータルを減らしてしまう
Bombs will hurt your score!
<$00>


//#WARN($0000386A, "@0000386A")
//P: 0000386C
//#JMP($0000386C)
#WRITE(PTR, $00088200)
//ボーナスはスコアを倍にするが\nクオリファイを超えると無効になる
Crossing the Baseline\nwill erase your Bonuses.
<$00>


//#WARN($000038AA, "@000038AA")
//P: 000038AC
//#JMP($000038AC)
#WRITE(PTR, $000881FC)
//難しい問題で無理をするな\n急がばまわれ
Don't overthink\n"difficult"-looking words.
<$00>


//#WARN($000038D2, "@000038D2")
//P: 000038D4
//#JMP($000038D4)
#WRITE(PTR, $000881F8)
//簡単な問題ほど気を抜くな
Don't get careless in the\nface of an "easy" word.
<$00>


//#WARN($000038ED, "@000038ED")
//P: 000038F0
//#JMP($000038F0)
#WRITE(PTR, $000881F4)
//すべってしまう青いリングは\n大きな助けになる
Blue rings are harmless\nto slide in a pinch.
<$00>


//#WARN($0000391C, "@0000391C")
//P: 0000391C
//#JMP($0000391C)
#WRITE(PTR, $000881F0)
//外せない赤いリングは\nヒントと思え
Try to view red rings\nas free hints instead.
<$00>


//#WARN($0000393E, "@0000393E")
//P: 00003940
//#JMP($00003940)
#WRITE(PTR, $000881EC)
//一番端を残してコインを外すと\n文字の調節が楽になる
Removing certain coins\ncan have dramatic effects!
<$00>


//#WARN($00003972, "@00003972")
//P: 00003974
//#JMP($00003974)
#WRITE(PTR, $000881E8)
//クオリファイ以下の好手は\n説明書に保存される
Read about the Baseline\nin the Users' Manual.
<$00>


//#WARN($000039A0, "@000039A0")
//P: 000039A0
//#JMP($000039A0)
#WRITE(PTR, $000881E4)
//ＵＮＤＯは×ボタンで\n活用すべし
× Button: Undo a move
<$00>


//#WARN($000039C0, "@000039C0")
//P: 000039C0
//#JMP($000039C0)
#WRITE(PTR, $000881E0)
//試行錯誤・ＲＥＳＴＡＲＴの先に\nレコードにつながる道がある
Restart puzzles to\nchallenge the Club Record!
<$00>


//#WARN($000039FA, "@000039FA")
//P: 000039FC
//#JMP($000039FC)
#WRITE(PTR, $000881DC)
//クオリファイ超過には一利もなし
Don't breach the Baseline.
<$00>


//#WARN($00003A1B, "@00003A1B")
//P: 00003A1C
//#JMP($00003A1C)
#WRITE(PTR, $000881D8)
//同じ記号は便利な近道
Matching coins are handy!
<$00>


//#WARN($00003A31, "@00003A31")
//P: 00003A34
//#JMP($00003A34)
#WRITE(PTR, $00088258)
//ログロックを華麗に解くための秘訣で\nゲーム中ではランダムに選択されます
Some secrets to success\ncan trigger at random.
<$00>


//#WARN($00003A7A, "@00003A7A")
//P: 00003A7C
//#JMP($00003A7C)
#WRITE(PTR, $00088254)
//スライド、回転、鏡文字、交換など\nそれぞれのリングで試してみましょう
Slide, mirror, rotate\nand exchange each ring!
<$00>


//#WARN($00003AC0, "@00003AC0")
//P: 00003AC0
//#JMP($00003AC0)
#WRITE(PTR, $00088250)
//方向キーの左・右で\nアディの反応を確かめてください
D-Pad LEFT or RIGHT:\nView Addie's reaction
<$00>


//#WARN($00003AF2, "@00003AF2")
//P: 00003AF4
//#JMP($00003AF4)
#WRITE(PTR, $00088248)
//中央横列で隣り合っている\nコインは連動します
Coins on the central row\nwill behave as linked.
<$00>


//#WARN($00003B20, "@00003B20")
//P: 00003B20
//#JMP($00003B20)
#WRITE(PTR, $0008823C)
#WRITE(PTR, $00088244)
//成立しない記号は\nスライドしても変化しません
Odd coins won't change\nwhen rings are slid.
<$00>


//#WARN($00003B4C, "@00003B4C")
#WARN($00003C60, "@00003C60")

//!!! Second Block

//P: 00001AB8
#JMP($00001AF8)
#WBB(PTR1, $0001EDF0)
#WUB(PTR1, $0001EDF1)
#WLB(PTR1, $0001EDFC)
#WHB(PTR1, $0001EDFD)
#WBB(PTR1, $00020EC0)
#WUB(PTR1, $00020EC1)
#WLB(PTR1, $00020EC8)
#WHB(PTR1, $00020EC9)
//Ｎｏ．%s【破損したファイル】
No.%S (FILE CORRUPTED.)
<$00>


//#WARN($00001AD5, "@00001AD5")
//P: 00001AF8
//#JMP($00001AF8)
#WBB(PTR1, $0001E81C)
#WUB(PTR1, $0001E81D)
#WLB(PTR1, $0001E820)
#WHB(PTR1, $0001E821)
//　　問題データをセーブ　＊
　　Save Puzzle Data　＊
<$00>


//#WARN($00001B13, "@00001B13")
//P: 00001B14
//#JMP($00001B14)
#WBB(PTR1, $0001E86C)
#WUB(PTR1, $0001E86D)
#WLB(PTR1, $0001E870)
#WHB(PTR1, $0001E871)
//問題データをロード
Load Puzzle Data
<$00>


//#WARN($00001B27, "@00001B27")
//P: 00001B28
//#JMP($00001B28)
#WBB(PTR1, $0001E8D0)
#WUB(PTR1, $0001E8D1)
#WLB(PTR1, $0001E8D8)
#WHB(PTR1, $0001E8D9)
//　　問題データをセーブ　%s
　　Save Puzzle Data　%s
<$00>


//#WARN($00001B43, "@00001B43")
//P: 00001B44
//#JMP($00001B44)
#WBB(PTR1, $0001E8E4)
#WUB(PTR1, $0001E8E5)
#WLB(PTR1, $0001E8E8)
#WHB(PTR1, $0001E8E9)
//問題を写す
Copy Puzzle
<$00>


//#WARN($00001B4F, "@00001B4F")
//P: 00001B50
//#JMP($00001B50)
#WBB(PTR1, $0001E918)
#WUB(PTR1, $0001E919)
#WLB(PTR1, $0001E91C)
#WHB(PTR1, $0001E91D)
//問題で遊ぶ
Play Puzzle
<$00>


//#WARN($00001B5B, "@00001B5B")
//P: 00001B5C
//#JMP($00001B5C)
#WBB(PTR1, $0001E94C)
#WUB(PTR1, $0001E94D)
#WLB(PTR1, $0001E950)
#WHB(PTR1, $0001E951)
//問題を作る
Create Puzzle
<$00>


//#WARN($00001B67, "@00001B67")
//P: 00001B68
//#JMP($00001B68)
#WRITE(PTR, $0007E3DC)
//新規に問題データを作成します。\nよろしいですか？
Create new puzzle data?
<$00>


//#WARN($00001B98, "@00001B98")
//P: 00001B98
//#JMP($00001B98)
#WRITE(PTR, $0007E3D8)
//問題データを上書きします。\nよろしいですか？
Overwrite puzzle data?
<$00>


//#WARN($00001BC4, "@00001BC4")
//P: 00001BC4
//#JMP($00001BC4)
#WRITE(PTR, $0007E3D4)
//ロードに失敗しています。\n再接続してロードし直して下さい。
Loading failed!\nReinsert memory card.
<$00>


//#WARN($00001BFE, "@00001BFE")
//P: 00001C00
//#JMP($00001C00)
#WRITE(PTR, $0007E3D0)
//セーブに失敗しています。\n再接続してセーブし直して下さい。
Saving failed!\nReinsert memory card.
<$00>


//#WARN($00001C3A, "@00001C3A")
//P: 00001C3C
//#JMP($00001C3C)
#WRITE(PTR, $0007E3CC)
//空きブロックが不足しています。\n問題の保存には１ブロック必要です。
Insufficient blocks.\nPuzzle Data=1 block.
<$00>


//#WARN($00001C7E, "@00001C7E")
//P: 00001C80
//#JMP($00001C80)
#WRITE(PTR, $0007E3C8)
//問題データの読み込みを行います。\nよろしいですか？
Open puzzle data?
<$00>


//#WARN($00001CB2, "@00001CB2")
//P: 00001CB4
//#JMP($00001CB4)
#WRITE(PTR, $0007E3C4)
//このファイルでゲームを再開します。\nよろしいですか？
Restart from this file?
<$00>


//#WARN($00001CE8, "@00001CE8")
//P: 00001CE8
//#JMP($00001CE8)
#WRITE(PTR, $0007E3C0)
//新規ファイルに記録します。\nよろしいですか？
Save to new file?
<$00>


//#WARN($00001D14, "@00001D14")
//P: 00001D14
//#JMP($00001D14)
#WRITE(PTR, $0007E3BC)
//ファイルを上書きします。\nよろしいですか？
Overwrite this file?
<$00>


//#WARN($00001D3E, "@00001D3E")
//P: 00001D40
//#JMP($00001D40)
#WRITE(PTR, $0007E3B8)
//このまま閉じると修正は失われます。\nよろしいですか？
Unsaved data will be lost.\nContinue?
<$00>


//#WARN($00001D74, "@00001D74")
//P: 00001D74
//#JMP($00001D74)
#WRITE(PTR, $0007E3B4)
//クリアデータは保存されません。\nこのまま閉じますか？
Clear data not saved.\nContinue?
<$00>


//#WARN($00001DA8, "@00001DA8")
//P: 00001DA8
//#JMP($00001DA8)
#WRITE(PTR, $0007E3B0)
//メモリーカードが初期化されて\nいません。初期化しますか？
Memory card not formatted.\nFormat memory card?
<$00>


//#WARN($00001DE0, "@00001DE0")
//P: 00001DE0
//#JMP($00001DE0)
#WRITE(PTR, $0007E3AC)
//ロードに失敗しました。\nメモリーカードを再接続して下さい。
Loading failed!\nReinsert memory card.
<$00>


//#WARN($00001E1A, "@00001E1A")
//P: 00001E1C
//#JMP($00001E1C)
#WRITE(PTR, $0007E3A8)
//セーブに失敗しました。\nメモリーカードを再接続して下さい。
Saving failed!\nReinsert memory card.
<$00>


//#WARN($00001E56, "@00001E56")
//P: 00001E58
//#JMP($00001E58)
#WRITE(PTR, $0007E3A4)
//ロードできるファイルがありません。\nメモリーカードを交換して下さい。
Data not found.\nInsert new memory card.
<$00>


//#WARN($00001E9C, "@00001E9C")
//P: 00001E9C
//#JMP($00001E9C)
#WRITE(PTR, $0007E3A0)
//空きブロックが不足しています。\nメモリーカードを交換して下さい。
Insufficient blocks.\nInsert new memory card.
<$00>


//#WARN($00001EDC, "@00001EDC")
//P: 00001EDC
//#JMP($00001EDC)
#WRITE(PTR, $0007E39C)
//フォーマットに失敗しました。\nメモリーカードを再接続して下さい。
Formatting failed!\nReinsert memory card.
<$00>


//#WARN($00001F1C, "@00001F1C")
//P: 00001F1C
//#JMP($00001F1C)
#WRITE(PTR, $0007E398)
//アクセスに失敗しました。\nメモリーカードを再接続して下さい。
Access denied!\nReinsert memory card.
<$00>


//#WARN($00001F58, "@00001F58")
//P: 00001F58
//#JMP($00001F58)
#WRITE(PTR, $0007E394)
//スロット１にメモリーカードが\n接続されていません。
No memory card found\nin Slot 1.
<$00>


//#WARN($00001F8A, "@00001F8A")
//P: 00001F8C
//#JMP($00001F8C)
#WRITE(PTR, $0007E390)
//シーンを再現しています。\nしばらくお待ち下さい…
Replaying scene.\nPlease wait a moment.
<$00>


//#WARN($00001FBC, "@00001FBC")
//P: 00001FBC
//#JMP($00001FBC)
#WRITE(PTR, $0007E38C)
//読み込んでいます。お待ち下さい…\nメモリーカードを抜かないで下さい。
Checking data. Please wait.\nDo not remove memory card!
<$00>


//#WARN($00002000, "@00002000")
//P: 00002000
//#JMP($00002000)
#WRITE(PTR, $0007E388)
//記録準備しています。お待ち下さい…\nメモリーカードを抜かないで下さい。
Loading data. Please wait.\nDo not remove memory card!
<$00>


//#WARN($00002046, "@00002046")
//P: 00002048
//#JMP($00002048)
#WRITE(PTR, $0007E384)
//書き込んでいます。お待ち下さい…\nメモリーカードを抜かないで下さい。
Saving data. Please wait.\nDo not remove memory card!
<$00>


//#WARN($0000208C, "@0000208C")
//P: 0000208C
//#JMP($0000208C)
#WRITE(PTR, $0007E380)
//初期化しています。お待ち下さい…\nメモリーカードを抜かないで下さい。
Formatting. Please wait.\nDo not remove memory card!
<$00>


//#WARN($000020D0, "@000020D0")
//P: 000020D0
//#JMP($000020D0)
#WRITE(PTR, $0007E37C)
//認識しています。お待ち下さい…\nメモリーカードを抜かないで下さい。
Checking. Please wait.\nDo not remove memory card!
<$00>


//#WARN($00002112, "@00002112")
//P: 00002114
//#JMP($00002114)
#WBB(PTR1, $0001EF54)
#WUB(PTR1, $0001EF55)
#WLB(PTR1, $0001EF58)
#WHB(PTR1, $0001EF59)
//新規作成
New File
<$00>


//#WARN($0000211D, "@0000211D")
//P: 00002120
//#JMP($00002120)
#WRITE(PTR, $0007E414)
//自作問題：
Puzzles Created:
<$00>


//#WARN($0000212B, "@0000212B")
//P: 0000212C
//#JMP($0000212C)
#WRITE(PTR, $0007E40C)
//コピー先：
Copied:
<$00>


//#WARN($00002137, "@00002137")
//P: 00002138
//#JMP($00002138)
#WRITE(PTR, $0007E408)
//この問題をコピーします：○…次へ
Copy puzzle?
<$00>


//#WARN($00002159, "@00002159")
//P: 0000215C
//#JMP($0000215C)
#WRITE(PTR, $0007E404)
//コピー元：
Copied:
<$00>


//#WARN($00002167, "@00002167")
//P: 00002168
//#JMP($00002168)
#WBB(PTR1, $0001F7AC)
#WUB(PTR1, $0001F7AD)
#WLB(PTR1, $0001F7B0)
#WHB(PTR1, $0001F7B1)
//%s%s%s\n\nＲＥＣＯＲＤ：%s　【%s】%s
%s%s%s\n\nRECORD: %s　【%s】%s
<$00>


//#WARN($0000218B, "@0000218B")
//P: 0000218C
//#JMP($0000218C)
#WBB(PTR1, $0001F8BC)
#WUB(PTR1, $0001F8BD)
#WLB(PTR1, $0001F8C4)
#WHB(PTR1, $0001F8C5)
//\n問題データが破損しています\nロードできません
\nPuzzle Data corrupted.\nUnable to load Puzzle Data.
<$00>


#WARN($000021B9, "@000021B9")

//!!! Block 3
//P: 00093738
#JMP($00093738)
#WRITE(PTR, $000881A4)
//下
Down
<$00>


//#WARN($0009373B, "@0009373B")
//P: 0009373C
//#JMP($0009373C)
#WRITE(PTR, $000881A0)
//上
Up
<$00>


//#WARN($0009373F, "@0009373F")
//P: 00093740
//#JMP($00093740)
#WRITE(PTR, $000881D4)
//交換
Exchange
<$00>


//#WARN($00093745, "@00093745")
//P: 00093748
//#JMP($00093748)
#WRITE(PTR, $000881D0)
//鏡文字
Mirror
<$00>

#WARN($00093763, "@00093763")

////!!! Extra Space !!!
#JMP($00088F00)

//P: 00003B4C
//#JMP($00003B4C)
#WRITE(PTR, $00088238)
#WRITE(PTR, $00088240)
//変化後も中央横列を基準にして\nアルファベットの順番が保たれます
After this, the central\nrow upholds ABC order.
<$00>


//#WARN($00003B8A, "@00003B8A")
//P: 00003B8C
//#JMP($00003B8C)
#WRITE(PTR, $00088234)
//△・Ｒ１・Ｌ１ボタンで\nコインを回転します
△, R1 or L1:\nRotates a coin
<$00>


//#WARN($00003BB6, "@00003BB6")
//P: 00003BB8
//#JMP($00003BB8)
#WRITE(PTR, $00088230)
#WRITE(PTR, $0008824C)
//リングを外すことで\n連動を調節できます
Control linked rings by\nremoving and exchanging.
<$00>


//#WARN($00003BDE, "@00003BDE")
//P: 00003BE0
//#JMP($00003BE0)
#WRITE(PTR, $0008822C)
//○ボタンで\nリングを交換します
○ Button: Removes or\nexchanges a ring
<$00>


//#WARN($00003BFE, "@00003BFE")
//P: 00003C00
//#JMP($00003C00)
#WRITE(PTR, $00088228)
//方向キーの上・下で\nリングはスライドします
D-Pad UP or DOWN:\nSlides a ring
<$00>


//#WARN($00003C2A, "@00003C2A")
//P: 00003C2C
//#JMP($00003C2C)
#WRITE(PTR, $00088224)
//ＲＥＳＴＡＲＴを選択すると\n問題が初期状態に戻ります
Restart to reset a puzzle\nto its original state.
<$00>


//#WARN($0009374F, "@0009374F")
//P: 00093750
//#JMP($00093750)
#WRITE(PTR, $000881C0)
//後候補
Slide Down
<$00>


//#WARN($00093757, "@00093757")
//P: 00093758
//#JMP($00093758)
#WRITE(PTR, $000881BC)
//前候補
Slide Up
<$00>